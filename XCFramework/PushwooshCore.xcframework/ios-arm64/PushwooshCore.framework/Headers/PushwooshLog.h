//
//  PushwooshLog.h
//  PushwooshCore
//
//  Created by André Kis on 11.03.25.
//  Copyright © 2025 Pushwoosh. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <PushwooshCore/PWSettings.h>

/**
 Enumeration for the available log levels in the Pushwoosh SDK.

 @discussion
 This enum defines the various log levels that can be set for the Pushwoosh SDK. The log level determines the verbosity of the logs, allowing developers to control how much logging information they want to see during the development or production phase.

 - `PW_LL_NONE`: No logs are shown.
 - `PW_LL_ERROR`: Logs only error messages.
 - `PW_LL_WARN`: Logs warnings and errors.
 - `PW_LL_INFO`: Logs informational messages, warnings, and errors.
 - `PW_LL_DEBUG`: Logs detailed debug information, along with errors, warnings, and informational messages.
 - `PW_LL_VERBOSE`: Logs all messages, including verbose debug details, errors, warnings, informational messages, and more.

 Use this enum to set the appropriate log level for the Pushwoosh SDK based on your debugging needs.

 Example:
 
 ```
 Pushwoosh.Debug.setLogLevel(.PW_LL_DEBUG)
 ```
 @see PWDebug
 */
typedef NS_ENUM(NSUInteger, PUSHWOOSH_LOG_LEVEL) {
    PW_LL_NONE,    ///< No logs are shown.
    PW_LL_ERROR,   ///< Logs error messages only.
    PW_LL_WARN,    ///< Logs warnings and errors.
    PW_LL_INFO,    ///< Logs informational messages, warnings, and errors.
    PW_LL_DEBUG,   ///< Logs debug messages, along with errors, warnings, and informational messages.
    PW_LL_VERBOSE  ///< Logs all messages, including verbose debug details.
};

@protocol PWDebug <NSObject>
/**
 Set the log level for debugging purposes.

  @discussion
  This method allows you to specify the log level for debugging in the Pushwoosh SDK. The log level determines the verbosity of logs generated by the SDK. You can adjust the log level based on your needs to either get more detailed logs for debugging or limit the logs to only important messages.

  The `logLevel` parameter accepts values from the `PUSHWOOSH_LOG_LEVEL` enumeration. Depending on the value passed, the SDK will either log verbose messages, warnings, or errors.

  You can also set the log level via the `Pushwoosh_LOG_LEVEL` key in your app's `Info.plist` file. The available log levels you can configure are:

  - `NONE`: No logs are shown.
  - `DEBUG`: Logs only debug-level messages.
  - `INFO`: Logs informational, debug, and error messages.
  - `WARNING`: Logs warnings and errors only.
  - `ERROR`: Logs only error messages.
  - `VERBOSE`: Logs all messages, including verbose debug details.

 @param logLevel The log level to set for the Pushwoosh SDK. The available levels are defined in the `PUSHWOOSH_LOG_LEVEL` enum. This allows you to control the amount of information that is logged by the SDK.

 Example:
 
 This would set the log level to `DEBUG`, showing informational logs, warnings, and errors.
 @see PUSHWOOSH_LOG_LEVEL
 
 ```
 Pushwoosh.Debug.setLogLevel(.PW_LL_DEBUG)
 ```
 */
+ (void)setLogLevel:(PUSHWOOSH_LOG_LEVEL)logLevel;
@end

@interface PushwooshLog : NSObject<PWDebug>

+ (Class<PWDebug>_Nonnull)Debug;
+ (void)pushwooshLog:(PUSHWOOSH_LOG_LEVEL)logLevel className:(id _Nonnull)object message:(NSString * _Nonnull)message;

@end
